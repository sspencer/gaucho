// Code generated by goa v3.10.2, DO NOT EDIT.
//
// inventory gRPC client CLI support package
//
// Command:
// $ goa gen gaucho/services/inventory/design -o services/inventory

package client

import (
	"encoding/json"
	"fmt"
	inventorypb "gaucho/services/inventory/gen/grpc/inventory/pb"
	inventory "gaucho/services/inventory/gen/inventory"
)

// BuildGetPayload builds the payload for the inventory get endpoint from CLI
// flags.
func BuildGetPayload(inventoryGetMessage string) (uint32, error) {
	var err error
	var message inventorypb.GetRequest
	{
		if inventoryGetMessage != "" {
			err = json.Unmarshal([]byte(inventoryGetMessage), &message)
			if err != nil {
				var zero uint32
				return zero, fmt.Errorf("invalid JSON for message, \nerror: %s, \nexample of valid JSON:\n%s", err, "'{\n      \"field\": 994971105\n   }'")
			}
		}
	}
	v := message.Field
	return v, nil
}

// BuildAddPayload builds the payload for the inventory add endpoint from CLI
// flags.
func BuildAddPayload(inventoryAddMessage string) (*inventory.AddPayload, error) {
	var err error
	var message inventorypb.AddRequest
	{
		if inventoryAddMessage != "" {
			err = json.Unmarshal([]byte(inventoryAddMessage), &message)
			if err != nil {
				return nil, fmt.Errorf("invalid JSON for message, \nerror: %s, \nexample of valid JSON:\n%s", err, "'{\n      \"character_id\": 2143031474,\n      \"item_id\": 1739942988\n   }'")
			}
		}
	}
	v := &inventory.AddPayload{
		CharacterID: message.CharacterId,
		ItemID:      message.ItemId,
	}

	return v, nil
}

// BuildRemovePayload builds the payload for the inventory remove endpoint from
// CLI flags.
func BuildRemovePayload(inventoryRemoveMessage string) (*inventory.RemovePayload, error) {
	var err error
	var message inventorypb.RemoveRequest
	{
		if inventoryRemoveMessage != "" {
			err = json.Unmarshal([]byte(inventoryRemoveMessage), &message)
			if err != nil {
				return nil, fmt.Errorf("invalid JSON for message, \nerror: %s, \nexample of valid JSON:\n%s", err, "'{\n      \"character_id\": 186076311,\n      \"item_id\": 3860548978\n   }'")
			}
		}
	}
	v := &inventory.RemovePayload{
		CharacterID: message.CharacterId,
		ItemID:      message.ItemId,
	}

	return v, nil
}
