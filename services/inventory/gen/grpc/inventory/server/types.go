// Code generated by goa v3.10.2, DO NOT EDIT.
//
// inventory gRPC server types
//
// Command:
// $ goa gen gaucho/services/inventory/design -o services/inventory

package server

import (
	inventorypb "gaucho/services/inventory/gen/grpc/inventory/pb"
	inventory "gaucho/services/inventory/gen/inventory"

	goa "goa.design/goa/v3/pkg"
)

// NewGetPayload builds the payload of the "get" endpoint of the "inventory"
// service from the gRPC request type.
func NewGetPayload(message *inventorypb.GetRequest) uint32 {
	v := message.Field
	return v
}

// NewProtoGetResponse builds the gRPC response type from the result of the
// "get" endpoint of the "inventory" service.
func NewProtoGetResponse(result []uint32) *inventorypb.GetResponse {
	message := &inventorypb.GetResponse{}
	message.Field = make([]uint32, len(result))
	for i, val := range result {
		message.Field[i] = val
	}
	return message
}

// NewAddPayload builds the payload of the "add" endpoint of the "inventory"
// service from the gRPC request type.
func NewAddPayload(message *inventorypb.AddRequest) *inventory.AddPayload {
	v := &inventory.AddPayload{
		CharacterID: message.CharacterId,
		ItemID:      message.ItemId,
	}
	return v
}

// NewProtoAddResponse builds the gRPC response type from the result of the
// "add" endpoint of the "inventory" service.
func NewProtoAddResponse(result []uint32) *inventorypb.AddResponse {
	message := &inventorypb.AddResponse{}
	message.Field = make([]uint32, len(result))
	for i, val := range result {
		message.Field[i] = val
	}
	return message
}

// NewRemovePayload builds the payload of the "remove" endpoint of the
// "inventory" service from the gRPC request type.
func NewRemovePayload(message *inventorypb.RemoveRequest) *inventory.RemovePayload {
	v := &inventory.RemovePayload{
		CharacterID: message.CharacterId,
		ItemID:      message.ItemId,
	}
	return v
}

// NewProtoRemoveResponse builds the gRPC response type from the result of the
// "remove" endpoint of the "inventory" service.
func NewProtoRemoveResponse() *inventorypb.RemoveResponse {
	message := &inventorypb.RemoveResponse{}
	return message
}

// ValidateAddRequest runs the validations defined on AddRequest.
func ValidateAddRequest(message *inventorypb.AddRequest) (err error) {
	if message.CharacterId < 1 {
		err = goa.MergeErrors(err, goa.InvalidRangeError("message.character_id", message.CharacterId, 1, true))
	}
	if message.ItemId < 1 {
		err = goa.MergeErrors(err, goa.InvalidRangeError("message.item_id", message.ItemId, 1, true))
	}
	return
}

// ValidateRemoveRequest runs the validations defined on RemoveRequest.
func ValidateRemoveRequest(message *inventorypb.RemoveRequest) (err error) {
	if message.CharacterId < 1 {
		err = goa.MergeErrors(err, goa.InvalidRangeError("message.character_id", message.CharacterId, 1, true))
	}
	if message.ItemId < 1 {
		err = goa.MergeErrors(err, goa.InvalidRangeError("message.item_id", message.ItemId, 1, true))
	}
	return
}
